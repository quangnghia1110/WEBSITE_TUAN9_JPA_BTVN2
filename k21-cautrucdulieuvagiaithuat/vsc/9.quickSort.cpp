#include<iostream>
#include<math.h>
#include<string.h>
using namespace std;
int partition(int a[],int l,int r)
{
	int i=l-1;
	int x=a[r];
	
	for(int j=l;j<r;j++)
	{
		if(a[j]<=x)
		{	
			++i;
			swap(a[i],a[j]);
			
		}
		
	}
	++i;
	swap(a[i],a[r]);
	return i;
{
	if(l>=r) return;
	int p=partition(a,l,r);
	quickSort(a,l,p-1);
	quickSort(a,p+1,r);
	
}
int main()
{
	int n;
	cin>>n;
	int a[1000];
	for(int i=0;i<n;i++)
		cin>>a[i];
	quickSort(a,0,n-1);
	for(int i=0;i<n;i++)
		cout<<a[i]<<"\t";
}
